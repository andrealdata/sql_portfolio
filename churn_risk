with C as
(
select 
	customer_id 
	, industry 
	, company_size 
	, region 
	, convert(start_date, date) as start_date 
	, current_plan 
	, status 
	, annual_revenue
	, sum(annual_revenue) over (partition by industry) as total_industry_revenue
	, sum(annual_revenue) over (partition by current_plan) as total_current_plan_revenue
from test_data.customers 
) -- select * from C;
, P as
(
select 
	customer_id
	, convert(week_start, date) as week_start_date
	, logins
	, reports_run
	, features_used
	, support_tickets
from test_data.product_usage
) -- select * from P;
, S as
(
select
	ticket_id 
	, customer_id 
	, convert(open_date, date) as open_date 
	, convert(resolved_date, time) as resolved_time
	, issue_type 
	, resolution_time_hrs 
	, csat_score
from test_data.support_interactions
) -- select * from S;
, T1 as
( 
	select 
		C.customer_id 
		, industry 
		, company_size 
		, region 
		, start_date 
		, current_plan 
		, status 
		, annual_revenue
		, annual_revenue / total_industry_revenue * 100 as percent_of_industry_revenue
		, annual_revenue / total_current_plan_revenue * 100 as percent_of_plan_revenue
		, count(ticket_id) as ticket_count
		, avg(csat_score) as avg_csat_score
		, avg(resolution_time_hrs) as avg_resolution_hrs
		, datediff(current_date, max(week_start_date)) as days_since_last_login
	from C
	left outer join S s
		on C.customer_id = s.customer_id
	left outer join P p
		on C.customer_id = p.customer_id
	where status = 'active'
	group by 
		C.customer_id 
		, industry 
		, company_size 
		, region 
		, start_date 
		, current_plan 
		, status 
		, annual_revenue
	order by 1
)  -- select * from T1;
, T2 as
(
SELECT 
	customer_id 
		, industry 
		, company_size 
		, region 
		, start_date 
		, current_plan 
		, status 
		, annual_revenue
		, percent_of_industry_revenue
		, percent_of_plan_revenue
    	, ticket_count
    	, avg_csat_score
   	 	, avg_resolution_hrs
    	, days_since_last_login
	    , (case
    when avg_csat_score is null or avg_csat_score < 2.5 then 3
    when avg_csat_score >= 2.5 and avg_csat_score < 3.5 then 2
    when avg_csat_score >= 3.5 and avg_csat_score < 4.0 then 1
    when avg_csat_score >= 4.0 then 0
    else 0  
end) +
(case
    when days_since_last_login is null or days_since_last_login > 60 then 3
    when days_since_last_login > 30 and days_since_last_login <= 60 then 2
    when days_since_last_login > 14 and days_since_last_login <= 30 then 1
    when days_since_last_login >= 0 and days_since_last_login <= 14 then 0
    else 0  
end) +
(case
    when ticket_count is null then 0  
    when ticket_count > 10 then 2
    when ticket_count > 5 and ticket_count <= 10 then 1
    when ticket_count >= 0 and ticket_count <= 5 then 0
    else 0  
end) +
(case
    when avg_resolution_hrs is null then 0 
    when avg_resolution_hrs > 24 then 2
    when avg_resolution_hrs > 12 and avg_resolution_hrs <= 24 then 1
    when avg_resolution_hrs >= 0 and avg_resolution_hrs <= 12 then 0
    else 0
end) as churn_risk_score
  from T1 
) -- select * from T2;
select
	customer_id as "Customer ID"
	, industry as "Industry"
	, company_size as "Company Size"
	, region as "Region"
	, start_date as "Start Date"
	, current_plan as "Current Plan"
	, status as "Status"
	, annual_revenue as "Annual Revenue"
	, percent_of_industry_revenue as "Percent of Industry Revenue"
	, percent_of_plan_revenue as "Percent of Plan Revenue"
	, ticket_count as "Ticket Count"
	, avg_csat_score as "Avg CSAT Score"
	, avg_resolution_hrs "Avg Resolution Hours"
	, days_since_last_login as "Days Since Last Login"
	, churn_risk_score as "Churn Risk Score"
	, case 
	    when churn_risk_score >= 8 then 'High'
	    when churn_risk_score between 6 and 7 then 'Medium'
	    when churn_risk_score <= 5 then 'Low'
	end as "Churn Risk Category"
from T2
;
